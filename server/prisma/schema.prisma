// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  name     String
  email    String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions   Session[]
  workspaces Workspace[]
  members    Member[]

  @@map("users")
}

model Session {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  invalidatedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Workspace {
  id String @id @default(nanoid())

  name        String
  slug        String  @unique
  description String? @default("")

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  members Member[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
  @@map("workspaces")
}

model Member {
  id String @id @default(nanoid())

  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("members")
}
