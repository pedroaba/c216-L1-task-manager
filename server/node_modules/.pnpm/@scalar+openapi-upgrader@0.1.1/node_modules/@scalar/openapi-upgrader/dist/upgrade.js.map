{
  "version": 3,
  "sources": ["../src/upgrade.ts"],
  "sourcesContent": ["import type { OpenAPIV3, OpenAPIV3_1 } from '@scalar/openapi-types'\nimport type { UnknownObject } from '@scalar/types/utils'\n\nimport { upgradeFromThreeOneToThreeTwo } from '@/3.1-to-3.2'\n\nimport { upgradeFromTwoToThree } from './2.0-to-3.0'\nimport { upgradeFromThreeToThreeOne } from './3.0-to-3.1'\n\n/**\n * Upgrade OpenAPI documents from Swagger 2.0 or OpenAPI 3.0 to OpenAPI 3.1.0\n */\nexport function upgrade(value: UnknownObject, targetVersion: '3.0' | '3.1' | '3.2') {\n  // Swagger 2.0 -> OpenAPI 3.0\n  const openapi30 = upgradeFromTwoToThree(value)\n  if (targetVersion === '3.0') {\n    return openapi30 as OpenAPIV3.Document\n  }\n\n  // OpenAPI 3.0 -> OpenAPI 3.1\n  const openapi31 = upgradeFromThreeToThreeOne(openapi30)\n  if (targetVersion === '3.1') {\n    return openapi31 as OpenAPIV3_1.Document\n  }\n\n  // OpenAPI 3.1 -> OpenAPI 3.2\n  const openapi32 = upgradeFromThreeOneToThreeTwo(openapi31)\n  if (targetVersion === '3.2') {\n    // TODO: We need OpenAPI 3.2 types\n    return openapi32 as OpenAPIV3_1.Document\n  }\n\n  return openapi32\n}\n"],
  "mappings": "AAGA,SAAS,qCAAqC;AAE9C,SAAS,6BAA6B;AACtC,SAAS,kCAAkC;AAKpC,SAAS,QAAQ,OAAsB,eAAsC;AAElF,QAAM,YAAY,sBAAsB,KAAK;AAC7C,MAAI,kBAAkB,OAAO;AAC3B,WAAO;AAAA,EACT;AAGA,QAAM,YAAY,2BAA2B,SAAS;AACtD,MAAI,kBAAkB,OAAO;AAC3B,WAAO;AAAA,EACT;AAGA,QAAM,YAAY,8BAA8B,SAAS;AACzD,MAAI,kBAAkB,OAAO;AAE3B,WAAO;AAAA,EACT;AAEA,SAAO;AACT;",
  "names": []
}
