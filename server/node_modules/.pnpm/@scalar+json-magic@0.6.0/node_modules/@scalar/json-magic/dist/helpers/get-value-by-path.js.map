{
  "version": 3,
  "sources": ["../../src/helpers/get-value-by-path.ts"],
  "sourcesContent": ["import { getId } from '@/helpers/get-schemas'\n\n/**\n * Traverses an object using an array of string segments (path keys) and returns\n * the value at the specified path along with its context (id if available).\n *\n * @param target - The root object to traverse.\n * @param segments - An array of string keys representing the path to traverse.\n * @returns An object containing the final context (id or previous context) and the value at the path.\n *\n * @example\n * const obj = {\n *   foo: {\n *     bar: {\n *       baz: 42\n *     }\n *   }\n * };\n * // Returns: { context: '', value: 42 }\n * getValueByPath(obj, ['foo', 'bar', 'baz']);\n */\nexport function getValueByPath(target: unknown, segments: string[]): { context: string; value: any } {\n  return segments.reduce<{ context: string; value: unknown }>(\n    (acc, key) => {\n      // If the accumulator is undefined, the path does not exist\n      if (acc.value === undefined) {\n        return { context: '', value: undefined }\n      }\n      // If the accumulator is not an object or is null, stop traversal\n      if (typeof acc.value !== 'object' || acc.value === null) {\n        return { context: '', value: undefined }\n      }\n      // Attempt to get the id from the current value for context tracking\n      const id = getId(acc.value)\n\n      // Return the next context and value for the next iteration\n      return { context: id ?? acc.context, value: acc.value?.[key] }\n    },\n    {\n      context: '',\n      value: target,\n    },\n  )\n}\n"],
  "mappings": "AAAA,SAAS,aAAa;AAqBf,SAAS,eAAe,QAAiB,UAAqD;AACnG,SAAO,SAAS;AAAA,IACd,CAAC,KAAK,QAAQ;AAEZ,UAAI,IAAI,UAAU,QAAW;AAC3B,eAAO,EAAE,SAAS,IAAI,OAAO,OAAU;AAAA,MACzC;AAEA,UAAI,OAAO,IAAI,UAAU,YAAY,IAAI,UAAU,MAAM;AACvD,eAAO,EAAE,SAAS,IAAI,OAAO,OAAU;AAAA,MACzC;AAEA,YAAM,KAAK,MAAM,IAAI,KAAK;AAG1B,aAAO,EAAE,SAAS,MAAM,IAAI,SAAS,OAAO,IAAI,QAAQ,GAAG,EAAE;AAAA,IAC/D;AAAA,IACA;AAAA,MACE,SAAS;AAAA,MACT,OAAO;AAAA,IACT;AAAA,EACF;AACF;",
  "names": []
}
